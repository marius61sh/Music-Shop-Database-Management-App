<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>